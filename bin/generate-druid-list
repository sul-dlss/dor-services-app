#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../config/environment'
require 'optparse'

options = { output: 'druids.txt', quiet: false }
parser = OptionParser.new do |option_parser|
  option_parser.banner = 'Usage: bin/generate-druid-list \'<QUERY, e.g., project_tag_ssim:"Naxos : born digital audio">\' [options]'

  option_parser.on('-sSAMPLE', '--sample SAMPLE', Integer, 'Sample size, otherwise all druids.')
  option_parser.on('-oOUTPUT', '--output OUTPUT', 'Output filename, otherwise druids.txt.')
  option_parser.on('-q', '--quiet', 'Do not write logging to STDOUT.')
  option_parser.on('-h', '--help', 'Displays help.') do
    puts option_parser
    exit
  end
end
parser.parse!(into: options)

if ARGV.empty?
  puts option_parser
  exit
end
query = ARGV[0]
druids = []

loop do
  results = SolrService.query('*:*', fl: 'id', rows: 10000, fq: query, start: druids.length, sort: 'id asc')
  break if results.empty? || (options[:sample] && druids.size >= options[:sample])

  results.each { |r| druids << r['id'] }
  puts "Retrieved #{druids.length} druids" unless options[:quiet]
  sleep(0.5)
end

druids = druids.take(options[:sample]) if options[:sample]

File.open(options[:output], 'w') do |file|
  druids.each do |druid|
    file.write("#{druid}\n")
  end
end
