version: '3.6'

services:
  web:
    build: .
    volumes:
      - ./:/app
    working_dir: /app
    depends_on:
      - solr
      - fcrepo
      - suri
      - workflow
      - redis
      - workers
      - db
    ports:
      - 3000:3000
    environment:
      DATABASE_NAME: dor_services
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: sekret
      DATABASE_HOSTNAME: db
      DATABASE_PORT: 5432
      RAILS_LOG_TO_STDOUT: 'true'
      REDIS_URL: redis://redis:6379/
      SOLR_URL: http://solr:8983/solr/dorservices
      SETTINGS__SSL__CERT_FILE: /app/spec/support/certs/spec.crt
      SETTINGS__SSL__KEY_FILE: /app/spec/support/certs/spec.key
      SETTINGS__SSL__KEY_PASS: thisisatleast4bytes
      SETTINGS__SOLR__URL: http://solr:8983/solr/dorservices
      SETTINGS__FEDORA_URL: http://fedoraAdmin:fedoraAdmin@fcrepo:8080/fedora
      SETTINGS__SURI__URL: http://suri:3000
      SETTINGS__WORKFLOW_URL: http://workflow:3000
  workers:
    build: .
    volumes:
      - ./:/app
    working_dir: /app
    command: bundle exec sidekiq
    depends_on:
      - redis
    environment:
      REDIS_URL: redis://redis:6379/
      SOLR_URL: http://solr:8983/solr/dorservices
      SETTINGS__SSL__CERT_FILE: /app/spec/support/certs/spec.crt
      SETTINGS__SSL__KEY_FILE: /app/spec/support/certs/spec.key
      SETTINGS__SSL__KEY_PASS: thisisatleast4bytes
      SETTINGS__SOLR__URL: http://solr:8983/solr/dorservices
      SETTINGS__FEDORA_URL: http://fedoraAdmin:fedoraAdmin@fcrepo:8080/fedora
      SETTINGS__SURI__URL: http://suri:3000
      SETTINGS__WORKFLOW_URL: http://workflow:3000
  redis:
    image: redis:4
    ports:
      - 6379:6379
  solr:
    image: solr:7
    volumes:
      - ./solr_conf/conf/:/myconfig
    command: solr-create -c dorservices -d /myconfig
    ports:
      - 8984:8983
  fcrepo:
    image: suldlss/fcrepo:no-messaging-latest
    ports:
      - 8983:8080
  suri:
    image: suldlss/suri-rails:latest
    ports:
      - 3002:3000
    depends_on:
      - db
    environment:
      DATABASE_NAME: suri
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: sekret
      DATABASE_HOSTNAME: db
      DATABASE_PORT: 5432
  workflow:
    image: suldlss/workflow-server:latest
    depends_on:
      - db
    ports:
      - 3001:3000
    environment:
      DATABASE_NAME: workflow-server
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: sekret
      DATABASE_HOSTNAME: db
      DATABASE_PORT: 5432
      SETTINGS__REDIS__HOSTNAME: redis
  db:
    image: postgres:11
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=sekret
    volumes:
      - postgres-data:/var/lib/postgresql/data
#  mongo:
#    image: mongo:4.4
#    ports:
#      - 27017:27017
#      - 28017:28017
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: dor_user
#      MONGO_INITDB_ROOT_PASSWORD: sekret
#    volumes:
#      - mongo-data:/data/db
  # Uncomment to use Mongo-Express to monitor Mongo. Do not commit docker-compose.yml.
#  mongo-express:
#    image: mongo-express
#    ports:
#      - 8081:8081
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: dor_user
#      ME_CONFIG_MONGODB_ADMINPASSWORD: sekret
volumes:
  postgres-data:
  mongo-data: